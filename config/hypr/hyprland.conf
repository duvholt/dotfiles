# Enable all monitors(?)
monitor = , preferred, auto, 1


# Some default env vars.t
env = XCURSOR_SIZE,24

# Qt (copied from random dotfiles)
env = QT_QPA_PLATFORM,wayland
env = QT_AUTO_SCREEN_SCALE_FACTOR,1
env = QT_WAYLAND_DISABLE_WINDOWDECORATION,1
env = QT_QPA_PLATFORMTHEME,kde
# KDE
env = XDG_MENU_PREFIX,plasma-

# Testing
env = XDG_CURRENT_DESKTOP,Hyprland,KDE
env = XDG_MENU_PREFIX,plasma-
env = XDG_SESSION_DESKTOP,KDE
env = KDE_SESSION_VERSION,6
env = KDE_APPLICATIONS_AS_SCOPE,1
env = KDE_FULL_SESSION,true
env = GTK_MODULES,canberra-gtk-module

# GTK???
env = GDK_BACKEND,wayland

# Nvidia
env = LIBVA_DRIVER_NAME,nvidia
env = XDG_SESSION_TYPE,wayland
env = GBM_BACKEND,nvidia-drm
env = __GLX_VENDOR_LIBRARY_NAME,nvidia


#
# Autostart. Feel free to add your own entries.
# Shell components will be started in the includes.conf file, which we include below.
#

exec-once = systemctl --user import-environment WAYLAND_DISPLAY XDG_CURRENT_DESKTOP XDG_SESSION_DESKTOP KDE_SESSION_VERSION XDG_MENU_PREFIX KDE_APPLICATIONS_AS_SCOPE KDE_FULL_SESSION
exec-once = systemctl --user import-environment GDK_BACKEND
exec-once = dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP

exec-once = waybar
exec-once = shikane
exec-once = walker --gapplication-service

# Start KDE Plasma components
exec-once = systemctl --user start plasma-workspace-custom.target 
exec-once = ~/.local/bin/i3_kde_services.sh

$term = alacritty
$browser = firefox
$filemanager = dolphin
$editor = vim
$launcher = walker
$exit = $launcher


# TODO:
# lockscreen (KDE? two bugs: idle lock and submit password): fixed after running kde services script?
# remove nwg: fixed
# cleanup waybar
# floating windows from plasmashell: fixed?
# xembedsniproxy black square
# weird semi focus on workspace change


#
# All the settings below are up to you. We don't touch them in the shell config utility.
#

cursor {
    no_hardware_cursors = true
    # allow_dumb_copy = true
    no_warps = true
}

debug {
    disable_logs = false
}

general {
  # See https://wiki.hyprland.org/Configuring/Variables/ for more

  gaps_in = 2
  gaps_out = 0
  border_size = 2
  col.active_border = rgba(33ccffee) rgba(00ff99ee) 45deg
  col.inactive_border = rgba(595959aa)

  layout = dwindle
  no_border_on_floating = no

}

misc {
    middle_click_paste = false
    focus_on_activate = true
}

decoration {
    # See https://wiki.hyprland.org/Configuring/Variables/ for more
    rounding = 2
    blur {
         enabled = yes
         size = 5
         passes = 1
         new_optimizations = true
    }
    
    drop_shadow = true   
    shadow_range = 4
    shadow_render_power = 3
    col.shadow = rgba(1a1a1aee)
}

animations {
    enabled = true

    # Some default animations, see https://wiki.hyprland.org/Configuring/Animations/ for more
    bezier = myBezier, 0.05, 0.9, 0.1, 1.05

    animation = windows, 1, 7, myBezier
    animation = windowsOut, 1, 7, default, popin 80%
    animation = border, 1, 10, default
    animation = borderangle, 1, 8, default
    animation = fade, 1, 7, default
    animation = workspaces, 1, 6, default
}

gestures {
    # See https://wiki.hyprland.org/Configuring/Variables/ for more
    workspace_swipe = true
}

# remap caps to ctrl
input {
    kb_options = ctrl:nocaps
}

input {
    kb_layout = us
    follow_mouse = 2
    mouse_refocus = false
    float_switch_override_focus = 0
    touchpad {
        disable_while_typing = true
        natural_scroll = true
        scroll_factor = 1.0
        tap-to-click = true
    }
}

# Window 6448b9887fd0 -> plasmashell:
# 	mapped: 1
# 	hidden: 0
# 	at: 1166,742
# 	size: 227,63
# 	workspace: 5 (5)
# 	floating: 1
# 	pseudo: 0
# 	monitor: 2
# 	class: org.kde.plasmashell
# 	title: plasmashell
# 	initialClass: org.kde.plasmashell
# 	initialTitle: plasmashell
# 	pid: 415391
# 	xwayland: 0
# 	pinned: 0
# 	fullscreen: 0
# 	fullscreenClient: 0
# 	grouped: 0
# 	tags:
# 	swallowing: 0
# 	focusHistoryID: 14

# See https://wiki.hyprland.org/Configuring/Window-Rules/ for more

# windowrule = nofocus,class:(plasmashell|kscreen_osd_service)

# windowrule = stayfocused, (plasmashell|kscreen_osd_service)
windowrule = float, (plasmashell|kscreen_osd_service)
# windowrule = noborder, (plasmashell|kscreen_osd_service)
# windowrule = nofocus, (plasmashell|kscreen_osd_service)
windowrule = noanim, (plasmashell|kscreen_osd_service)
# windowrule = center 1, (plasmashell|kscreen_osd_service)
windowrule = move 100%-w-20 90, (plasmashell|kscreen_osd_service)


windowrule = noanim, (Ulauncher)
# windowrule = stayfocused, (Ulauncher)

# no_focus [class="plasmashell|lattedock" window_type="notification"]
# Float and remove borders from plasma and latte windows
#for_window [class="plasmashell|lattedock|kscreen_osd_service"] floating enable, border none


# See https://wiki.hyprland.org/Configuring/Keywords/ for more
$mainMod = SUPER

# KEY BINDINGS, see https://wiki.hyprland.org/Configuring/Binds/ for more

bind = $mainMod, W, exec, $browser
bind = $mainMod, E, exec, $editor
bind = $mainMod, X, exec, $exit
# bind = $mainMod, F, exec, $filemanager
bind = ALT, SPACE, exec, $launcher
# bind = $mainMod, D, exec, $launcher
bind = $mainMod, T, exec, $term
bind = $mainMod, RETURN, exec, $term

bind = $mainMod, F, fullscreen, 1
bind = $mainMod, I, pin
bind = $mainMod, C, killactive,
bind = $mainMod SHIFT, Q, killactive, # custom
bind = ALT, Q, killactive,
bind = ALT, F4, killactive,
bind = $mainMod SHIFT, M, exit,
bind = $mainMod, Space, togglefloating,
# bind = $mainMod, V, togglefloating,
bind = $mainMod SHIFT, C, exec, hyprctl reload      # reload Hyprland
bind = $mainMod SHIFT, Z, movetoworkspace, special  # move to the special workspace
bind = $mainMod, Z, togglespecialworkspace          # show/hide special workspace

bind = ALT, Tab, togglesplit,                       # (dwindle)
bind = $mainMod, P, pseudo,                         # (dwindle)
bind = $mainMod, A, layoutmsg, cycleprev            # (master)
bind = $mainMod, S, layoutmsg, swapwithmaster       # (master)
bind = $mainMod, D, layoutmsg, cyclenext            # (master)

# Lock screen using Plasma
bind = $mainMod, L, exec, qdbus org.kde.ksmserver /ScreenSaver org.freedesktop.ScreenSaver.Lock

# SCREENSHOT (/usr/local/bin/screenshot)
# bind = , Print, exec, screenshot fullscreen                           # full screen
bind = , Print, exec, screenshot swappy                           # override
bind = $mainMod, Print, exec, screenshot fullscreen                           # full screen
bind = CONTROL, Print, exec, screenshot display                       # focused display
bind = $mainMod SHIFT+CONTROL, Print, exec, screenshot focused        # focused window
bind = SHIFT+CONTROL, Print, exec, screenshot swappy                  # selected region -> swappy
# bind = SHIFT+CONTROL, Print, exec, screenshot region                # or selected region w/o swappy

# MOVE FOCUS with mainMod + arrow keys
bind = $mainMod, left, movefocus, l
bind = $mainMod, right, movefocus, r
bind = $mainMod, up, movefocus, u
bind = $mainMod, down, movefocus, d

# MOVE WINDOW with mainMod SHIFT + arrow keys
bind = $mainMod SHIFT, left, movewindow, l
bind = $mainMod SHIFT, right, movewindow, r
bind = $mainMod SHIFT, up, movewindow, u
bind = $mainMod SHIFT, down, movewindow, d

# SWITCH WORKSPACES with mainMod + [0-9]
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10

# MOVE ACTIVE WINDOW TO A WORKSPACE with mainMod + SHIFT + [0-9]
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, 0, movetoworkspace, 10

# Move workspace to other monitors
bind = CTRL $mainMod, left, movecurrentworkspacetomonitor, l
bind = CTRL $mainMod, right, movecurrentworkspacetomonitor, r

# SCROLL THROUGH EXISTING WORKSPACES with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1

# MOVE/RESIZE WINDOWS with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

# Media keys

bindel = , XF86AudioRaiseVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%+
bindel = , XF86AudioLowerVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-
bindl = , XF86AudioMute, exec, wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
# Requires playerctl
bindl = , XF86AudioPlay, exec, playerctl play-pause
bindl = , XF86AudioPrev, exec, playerctl previous
bindl = , XF86AudioNext, exec, playerctl next

bindl = ALT SHIFT, up, exec, playerctl play-pause

# will switch to a submap called resize
bind = $mainMod, R, submap, resize

# will start a submap called "resize"
submap = resize

$resizeStep = 30

# sets repeatable binds for resizing the active window
binde = , right, resizeactive, $resizeStep 0
binde = , left, resizeactive, -$resizeStep 0
binde = , up, resizeactive, 0 -$resizeStep
binde = , down, resizeactive, 0 $resizeStep

# use reset to go back to the global submap
bind = , escape, submap, reset 

# will reset the submap, which will return to the global submap
submap = reset
